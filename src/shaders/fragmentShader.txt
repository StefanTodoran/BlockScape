#version 400 core

in vec2 textureCoords;
in vec3 surfaceNormal;
in vec3 toLightVector;

out vec4 outColor;

uniform sampler2D textureSampler;
uniform vec3 lightColor;

void main(void) {
	
	vec3 unitNormal = normalize(surfaceNormal);
	vec3 unitLight = normalize(toLightVector);
	
	float res = dot(unitNormal, unitLight);
	float brightness = max(res, 0.1);
	// vec3 diffuse = brightness * lightColor;
	vec3 diffuse = vec3(brightness);
	
	// somehow get size 32 from texture size?
	vec2 pixelCoords = floor(textureCoords * 32) / 32;
	// vec2 pixelCoords = textureCoords;
	outColor = vec4(diffuse, 1) * texture(textureSampler, pixelCoords);
}